* {
    box-sizing: border-box;
}

ul {
    padding-left: 1.5rem;
}

body {
    font-family: "Poppins", sans-serif;
    color: #333;
    background-color: snow;
    margin: 0 auto;
    max-width: 1000px;
}

.item {
    padding: 8px;
    background-color: white;
    border: 4px solid tomato;
    border-radius: 6px;
    box-shadow: 0px 2px rgba(0, 0, 0, 0.25);
}

.height-50 {
    height: 50vh;
}

/* TASK 1 */ /* PANCAKE STACK */
.task-1.container {
    display: grid; /* make this container display -> GRID */
    height: 100vh;
    grid-template-rows: auto 1fr auto; /* decides the amount of space for each row*/
}

/* TASK 2 */ /* Simple 1 2 Columns Grid Layout */
.task-2.container {
    display: grid;
    height: 100vh;
    grid-template-columns: repeat(12, 1fr); /* decides the number of columns for this grid container & width of the columns */
    column-gap: 12px;
    align-items: center; /* vertical alignment */
}

.task-2 .item-1 {
    /* grid-column-start: 2;*/ /* start of this tag */
    /*grid-column-end: 6;*/ /* ENDS at the start of column #6 -> takes up all the space from 2 - 5 */
    /*grid-column-end: span 4;*/ /* alternative way of using "span" keyword  */
    grid-column: 2 / span 4; /* start-end combined */
}

.task-2 .item-2 {
    grid-column: 6 / span 6;
}

/* TASK3 - RESPONSIVE LAYOUT */
.task-3-1.container {
    display: grid;
    height: 100vh;
    grid-template-rows: auto auto 1fr auto auto auto;
    gap: 24px; /* GAP BETWEEN FOOTER */
}

@media (min-width: 720px) {
    .task-3-1.container {
        /* #of columns & size */
        grid-template-columns: repeat(12, 1fr);
        /* height of the grid rows */
        grid-template-rows: auto auto 1fr auto auto auto;
    }

    .task-3-1 .header {
        /* header's span size */
        grid-column: 1 / span 12;
    }

    .task-3-1 .navigation {
        grid-column: 1 / span 12;
    }

    .task-3-1 .main {
        grid-column: 3 / span 10;
    }

    .task-3-1 .sidebar {
        grid-column: 1 / span 2;
        grid-row: 3;
    }

    .task-3-1 .ads {
        grid-column: 1 / span 2;
    }

    .task-3-1 .footer {
        grid-column: 3 / span 10;
    }
}

@media (min-width: 1020px) {
    .task-3-1 .navigation {
        grid-column: 3 / span 8;
    }

    .task-3-1 .main {
        grid-column: 3 / span 8;
    }

    .task-3-1 .sidebar {
        grid-row: 2 / 4;
    }

    .task-3-1 .ads {
        grid-column: 11 / span 2;
        grid-row: 2 / 4;
    }

    .task-3-1 .footer {
        grid-column: 1 / span 12;
    }
}

/* RESPONSIVE VER.2 */
.task3-2.container {
    display: grid;
    height: 100vh;
    gap: 24px ;
    grid-template-rows: auto auto 1fr auto auto auto;
    grid-template-areas: 
    "header header header" 
    "nav nav nav" 
    "sidebar main main" 
    "ads footer footer";
    grid-template-rows: auto auto 1fr auto auto;
}

.task3-2 .header {
    grid-area: header;
}

.task3-2 .navigation {
    grid-area: nav;
}

.task3-2 .ads {
    grid-area: ads;
}

.task3-2 .sidebar {
    grid-area: sidebar;
}

.task3-2 .main {
    grid-area: main;
}

.task3-2 .footer {
    grid-area: footer;
}

@media (min-width: 1020px) {
    .task3-2.container {
        grid-template-areas: 
        "header header header header"
        "sidebar nav nav ads"
        "sidebar main main ads"
        "footer footer footer footer"
        ;

        grid-template-rows: auto auto 1fr auto;
    }
}

/* TASK4 RESPONSIVE W/O media query */
.task4.container {
    display: grid;
    gap: 24px;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
}

.task4 .item-5 {
    grid-column-end: span 2;
}

/* Chess Grid */
.task5.container {
    display: grid;
    height: 100vh;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(12, 1fr) ;
}

.task5 .item-1 {
    grid-row: 1 / span 3;
    grid-column: 1 / span 3;
}

.task5 .item-2 {
    grid-row: 4 / span 3;
    grid-column: 4 / span 3;
}

.task5 .item-3 {
    grid-row: 7 / span 3;
    grid-column:  7 / span 3;
}

.task5 .item-4 {
    grid-row: 10 / span 3;
    grid-column:  10 / span 3;
}